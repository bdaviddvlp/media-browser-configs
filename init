#!/bin/bash

# Check if docker is installed
if ! command -v docker &> /dev/null
then
    echo "Docker could not be found. Please install docker and try again."
    exit
fi

# Check if docker compose plugin is installed
if ! docker compose version &> /dev/null
then
    echo "Docker compose plugin could not be found. Please install docker compose plugin and try again."
    exit
fi

# Check if $USER is in docker group
if ! groups "$USER" | grep &> /dev/null '\bdocker\b'
then
    echo "Please add $USER to the docker group and try again."
    exit
fi

# Check if curl is installed
if ! command -v curl &> /dev/null
then
    echo "Curl could not be found. Please install curl and try again."
    exit
fi

echo "This script will install media-browser. Please read the instructions carefully. DO NOT proceed before the instructions are not completed. Press enter to continue"
echo "Press enter to continue"
read -r

# Check if editor is set
if [ -z "${EDITOR}" ]
then
    echo "Choose your editor (nano, vim, etc.):"
    # shellcheck disable=SC2162
    read
    export EDITOR="$REPLY"
    echo "Trying to use $EDITOR as editor."
    # Check if editor is installed
    if ! command -v "$EDITOR" &> /dev/null
    then
        echo "Editor could not be found. Please install $EDITOR and try again."
        exit
    fi
else
    echo "Using $EDITOR as editor."
fi

mkdir -p "$HOME/.local/share/media-browser/backend/config"
mkdir -p "$HOME/.local/share/media-browser/frontend/config"

# Create backend config file
curl -s -o "$HOME/.local/share/media-browser/backend/config/local.json" https://raw.githubusercontent.com/bdaviddvlp/media-browser-configs/refs/heads/main/backend/default.json
echo "Please fill in the values in $HOME/.local/share/media-browser/backend/config/local.json"
echo "To edit the file, press enter to open it in $EDITOR. Press enter to continue"
read -r
$EDITOR "$HOME/.local/share/media-browser/backend/config/local.json"
echo "After you have filled in the values, press enter to continue"
read -r

# Create frontend config file
curl -s -o "$HOME/.local/share/media-browser/frontend/config/local.json" https://raw.githubusercontent.com/bdaviddvlp/media-browser-configs/refs/heads/main/frontend/default.json
echo "Please fill in the values in $HOME/.local/share/media-browser/frontend/config/local.json"
echo "To edit the file, press enter to open it in $EDITOR"
read -r
$EDITOR "$HOME/.local/share/media-browser/frontend/config/local.json"
echo "After you have filled in the values, press enter to continue"
read -r

# Create .env file
curl -s -o "$HOME/.local/share/media-browser/.env" https://raw.githubusercontent.com/bdaviddvlp/media-browser-configs/refs/heads/main/.env.example
echo "Please fill in the values in $HOME/.local/share/media-browser/.env"
echo "To edit the file, press enter to open it in $EDITOR"
read -r
$EDITOR "$HOME/.local/share/media-browser/.env"
echo "After you have filled in the values, press enter to continue"
read -r
source "$HOME/.local/share/media-browser/.env"

#Download qbittorrent helper script
curl -s -o "$HOME/.local/share/media-browser/qbittorrent_webhook_complete" https://raw.githubusercontent.com/bdaviddvlp/media-browser-configs/refs/heads/main/qbittottent_webhook_complete
chmod +x "$HOME/.local/share/media-browser/qbittorrent_webhook_complete"
echo "Please copy the $HOME/.local/share/media-browser/qbittorrent_webhook_complete script to your PATH or if you run qbittorrent in docker, please mount it in your qbittorrent container in /usr/local/bin/qbittorrent_webhook_complete. Press enter to continue"
read -r

# Download docker-compose.yml
curl -s -o "$HOME/.local/share/media-browser/docker-compose.yml" https://raw.githubusercontent.com/bdaviddvlp/media-browser-configs/refs/heads/main/docker-compose.yml

# Start docker compose
docker compose -f "$HOME/.local/share/media-browser/docker-compose.yml" up -d

# Check if telegram bot token and chat id are set
if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]
then
    echo "To authenticate with Plex, please see the logs of the backend container and follow the instructions."
    echo "Press enter to continue"
    read -r
    docker compose logs backend
else
    echo "Please check your telegram to see auth code"
fi

echo "Happy browsing! :)"